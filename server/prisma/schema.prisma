datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
generator client {
  provider = "prisma-client-js"
}
model User {
  id Int      @id @default(autoincrement())
  imgUrl String
  firstName String
  lastName String
  email String @unique
  password String
  phoneNumber Int
  location String
  role Role? @default(user)
 owner Owner? @relation(fields: [ownerId],references:[id])
 ownerId Int? @unique
 reservation Reservation?
 message Message[]
 join JoinChat[]
}

enum Role {
  owner
  user
}

model Hotel{
  id Int @id @default(autoincrement())
  name String
  location String
  description String
  rating Int
  rooms Int
  licence String
  owner Owner @relation(fields: [ownerId],references:[id])
  ownerId Int @unique
  room Room[]
 
}
enum Option {
  breakFast 
  all_Inclusive
  halfBoard
}
model Owner{
id Int @id  @default(autoincrement())
user User?
hotel Hotel[]
}
model Reservation {
  id Int @id @default(autoincrement())
 room Room @relation(fields: [roomId],references:[id])
 roomId Int @unique
 user User @relation(fields: [userId],references:[id])
 userId Int @unique
}
model Room{
  id Int @id @default(autoincrement())
  hotel Hotel @relation(fields: [hotelId],references: [id])
  hotelId Int
  reservation Reservation?
   dayAvailability DayAvailability[]
     price Int
  imgUrl String 
    option Option?
   view View
}
enum View{
    seaView 
  standerView 
}
model DayAvailability{
  id Int @id @default(autoincrement())
  room Room @relation(fields: [roomId],references: [id])
  roomId Int @unique
 availability Boolean @default(true)
}
model Message{
id          Int       @id @default(autoincrement()) 
  content     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  users        User      @relation(fields: [usersId], references: [id])
  usersId      Int
    room        RoomChat      @relation(fields: [roomId], references: [id]) 
  roomId      Int
 
}
model RoomChat {
  id        Int       @id @default(autoincrement())
  message Message[]
   join JoinChat[]
  }
  model JoinChat {
   id          Int       @id @default(autoincrement()) 
   rooms    RoomChat  @relation(fields: [roomId], references: [id])
  roomId  Int
   users    User  @relation(fields: [userId], references: [id])
  userId  Int 
   }